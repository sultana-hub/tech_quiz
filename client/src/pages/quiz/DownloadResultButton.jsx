


import React from "react";
import { Button } from "@mui/material";
import DownloadIcon from "@mui/icons-material/Download";
import { jsPDF } from "jspdf";

const DownloadResultButton = ({ result }) => {
    const handleDownload = () => {
        const doc = new jsPDF("landscape", "pt", "a4");

        // Add border
        doc.setDrawColor(0);
        doc.setLineWidth(3);
        doc.rect(20, 20, doc.internal.pageSize.getWidth() - 40, doc.internal.pageSize.getHeight() - 40);

        // Title
        doc.setFont("helvetica", "bold");
        doc.setFontSize(28);
        doc.text("Certificate of Achievement", doc.internal.pageSize.getWidth() / 2, 100, { align: "center" });

        // Subtitle
        doc.setFont("times", "italic");
        doc.setFontSize(16);
        doc.text("This is to certify that", doc.internal.pageSize.getWidth() / 2, 160, { align: "center" });

        // Student Name
        doc.setFont("times", "bold");
        doc.setFontSize(24);
        doc.text(result.userName, doc.internal.pageSize.getWidth() / 2, 200, { align: "center" });

        // Achievement text
        doc.setFont("times", "normal");
        doc.setFontSize(16);
        doc.text(
            `has successfully completed the quiz on ${result.subject} with a score of ${result.score}`,
            doc.internal.pageSize.getWidth() / 2,
            250,
            { align: "center", maxWidth: 700 }
        );

        // Date
        doc.setFontSize(14);
        doc.text(`Date: ${new Date().toLocaleDateString()}`, 100, 350);

        // Signature area
        doc.line(doc.internal.pageSize.getWidth() - 200, 330, doc.internal.pageSize.getWidth() - 80, 330);
        doc.text("Authorized Sign", doc.internal.pageSize.getWidth() - 140, 350, { align: "center" });

        // Footer
        doc.setFontSize(12);
        doc.text("Generated by Quiz App", doc.internal.pageSize.getWidth() / 2, doc.internal.pageSize.getHeight() - 30, {
            align: "center",
        });

        // Save file
        doc.save("quiz_certificate.pdf");
    };

    return (
        <Button
            variant="contained"
            color="secondary"
            startIcon={<DownloadIcon />}
            sx={{
                borderRadius: "12px",
                textTransform: "none",
                fontWeight: 600,
                px: 3,
                py: 1.2,
                boxShadow: 3,
                "&:hover": {
                    boxShadow: 6,
                    backgroundColor: "secondary.dark",
                },
            }}
            onClick={handleDownload}
        >
            Download Certificate
        </Button>
    );
};

export default DownloadResultButton;
