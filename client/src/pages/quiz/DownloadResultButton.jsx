


import React from "react";
import { Button } from "@mui/material";
import DownloadIcon from "@mui/icons-material/Download";
import { jsPDF } from "jspdf";

// Convert an image from public folder â†’ Base64
const getBase64FromUrl = async (url) => {
  const response = await fetch(url);
  const blob = await response.blob();
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.readAsDataURL(blob);
    reader.onloadend = () => resolve(reader.result);
    reader.onerror = reject;
  });
};

const DownloadResultButton = ({ result }) => {
  const handleDownload = async () => {
    const doc = new jsPDF("landscape", "pt", "a4");
    const pageWidth = doc.internal.pageSize.getWidth();
    const pageHeight = doc.internal.pageSize.getHeight();

    //  Load images from public folder
    const signatureBase64 = await getBase64FromUrl("/signature.png");
    const stampBase64 = await getBase64FromUrl("/stamp.png");

    // Decorative Border
    doc.setDrawColor(184, 134, 11);
    doc.setLineWidth(8);
    doc.rect(30, 30, pageWidth - 60, pageHeight - 60);

    // Title
    doc.setFont("times", "bolditalic");
    doc.setFontSize(36);
    doc.setTextColor(0, 102, 204);
    doc.text("Certificate of Achievement", pageWidth / 2, 120, { align: "center" });

    // Subtitle
    doc.setFont("times", "italic");
    doc.setFontSize(20);
    doc.text("This is to certify that", pageWidth / 2, 180, { align: "center" });

    // Student Name
    doc.setFont("times", "bold");
    doc.setFontSize(28);
    doc.setTextColor(0, 51, 102);
    doc.text(result.userName, pageWidth / 2, 230, { align: "center" });

    // Achievement text
    doc.setFont("times", "normal");
    doc.setFontSize(18);
    doc.text(
      `has successfully completed the quiz on "${result.subject}"`,
      pageWidth / 2,
      280,
      { align: "center", maxWidth: 700 }
    );
    doc.text(`with a score of ${result.score}`, pageWidth / 2, 310, { align: "center" });

    // Date
    // doc.setFontSize(14);
    // doc.text(`Date: ${new Date().toLocaleDateString()}`, 100, 370);

    // Signature line
    doc.line(pageWidth - 250, 360, pageWidth - 80, 360);

    //  Add signature + stamp images
    doc.addImage(signatureBase64, "PNG", pageWidth - 230, 300, 120, 50);
    doc.addImage(stampBase64, "PNG", 100, 300, 100, 100);

    // Label
    doc.setFont("times", "normal");
    doc.setFontSize(14);
    doc.text("Authorized Signature", pageWidth - 165, 380, { align: "center" });

      // Date below signature
    doc.setFontSize(12);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, pageWidth - 165, 400, { align: "center" });


    // Footer
    doc.setFontSize(12);
    doc.text("Generated by Quiz App", pageWidth / 2, pageHeight - 40, { align: "center" });

    // Save file
    doc.save("quiz_certificate.pdf");
  };

  return (
    <Button
      variant="contained"
      color="secondary"
      startIcon={<DownloadIcon />}
      sx={{
        borderRadius: "12px",
        textTransform: "none",
        fontWeight: 600,
        px: 3,
        py: 1.2,
        boxShadow: 3,
        "&:hover": {
          boxShadow: 6,
          backgroundColor: "secondary.dark",
        },
      }}
      onClick={handleDownload}
    >
      Download Certificate
    </Button>
  );
};

export default DownloadResultButton;



